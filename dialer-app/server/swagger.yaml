openapi: 3.0.0
info:
  title: Dialer + Lead Pipeline API
  version: 1.0.0
  description: API documentation for the dialer and lead pipeline system

servers:
  - url: http://localhost:3001/api
    description: Development server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        role:
          type: string
          enum: [admin, agent]

    Lead:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        phoneNumber:
          type: string
        email:
          type: string
        status:
          type: string
          enum: [New, Contacted, Follow-up, Won, Lost]
        notes:
          type: string
        company:
          type: string
        source:
          type: string
          enum: [NextGen, Marketplace, Self Generated, CSV Import, Manual Entry, Usha]
          description: Lead source identifier
        assignedTo:
          type: string
        lastContactedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Call:
      type: object
      properties:
        id:
          type: string
        twilioSid:
          type: string
        from:
          type: string
        to:
          type: string
        status:
          type: string
          enum:
            [
              queued,
              ringing,
              in-progress,
              completed,
              failed,
              busy,
              no-answer,
              canceled,
            ]
        duration:
          type: number
        recordingUrl:
          type: string
        direction:
          type: string
          enum: [inbound, outbound]
        agent:
          type: string
        lead:
          type: string
        notes:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

paths:
  /auth/register:
    post:
      summary: Register a new user
      tags: [Auth]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - firstName
                - lastName
              properties:
                email:
                  type: string
                password:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                role:
                  type: string
                  enum: [admin, agent]
      responses:
        201:
          description: User created successfully
        400:
          description: Invalid input
        401:
          description: Unauthorized
        500:
          description: Server error

  /auth/login:
    post:
      summary: Login user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Login successful
        401:
          description: Invalid credentials
        500:
          description: Server error

  /auth/profile:
    get:
      summary: Get user profile
      tags: [Auth]
      security:
        - BearerAuth: []
      responses:
        200:
          description: Profile retrieved successfully
        401:
          description: Unauthorized
        500:
          description: Server error

  /leads:
    get:
      summary: Get all leads
      tags: [Leads]
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: search
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        200:
          description: Leads retrieved successfully
        401:
          description: Unauthorized
        500:
          description: Server error

    post:
      summary: Create a new lead
      tags: [Leads]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Lead"
      responses:
        201:
          description: Lead created successfully
        400:
          description: Invalid input
        401:
          description: Unauthorized
        500:
          description: Server error

  /leads/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
    get:
      summary: Get a lead by ID
      tags: [Leads]
      security:
        - BearerAuth: []
      responses:
        200:
          description: Lead retrieved successfully
        401:
          description: Unauthorized
        404:
          description: Lead not found
        500:
          description: Server error

    patch:
      summary: Update a lead
      tags: [Leads]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Lead"
      responses:
        200:
          description: Lead updated successfully
        400:
          description: Invalid input
        401:
          description: Unauthorized
        404:
          description: Lead not found
        500:
          description: Server error

    delete:
      summary: Delete a lead
      tags: [Leads]
      security:
        - BearerAuth: []
      responses:
        200:
          description: Lead deleted successfully
        401:
          description: Unauthorized
        404:
          description: Lead not found
        500:
          description: Server error

  /calls:
    post:
      summary: Initiate a call
      tags: [Calls]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - phoneNumber
              properties:
                phoneNumber:
                  type: string
                leadId:
                  type: string
      responses:
        200:
          description: Call initiated successfully
        400:
          description: Invalid input
        401:
          description: Unauthorized
        500:
          description: Server error

    get:
      summary: Get all calls
      tags: [Calls]
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: leadId
          schema:
            type: string
      responses:
        200:
          description: Calls retrieved successfully
        401:
          description: Unauthorized
        500:
          description: Server error

  /calls/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
    get:
      summary: Get a call by ID
      tags: [Calls]
      security:
        - BearerAuth: []
      responses:
        200:
          description: Call retrieved successfully
        401:
          description: Unauthorized
        404:
          description: Call not found
        500:
          description: Server error

  /calls/{id}/notes:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
    patch:
      summary: Update call notes
      tags: [Calls]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - notes
              properties:
                notes:
                  type: string
      responses:
        200:
          description: Call notes updated successfully
        400:
          description: Invalid input
        401:
          description: Unauthorized
        404:
          description: Call not found
        500:
          description: Server error

  /calls/webhooks/twilio/status:
    post:
      summary: Twilio status callback webhook
      tags: [Calls]
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                CallSid:
                  type: string
                CallStatus:
                  type: string
                CallDuration:
                  type: string
                RecordingUrl:
                  type: string
      responses:
        200:
          description: Webhook processed successfully
        500:
          description: Server error

  /calls/webhooks/twilio/voice:
    post:
      summary: Twilio voice webhook
      tags: [Calls]
      responses:
        200:
          description: TwiML response generated successfully
          content:
            application/xml:
              schema:
                type: string
        500:
          description: Server error
